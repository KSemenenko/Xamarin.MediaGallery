<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <TargetFrameworks>net6.0;net6.0-android;net6.0-ios</TargetFrameworks>
        <!-- Uncomment to also build the tizen app. You will need to install tizen by following this: https://github.com/Samsung/Tizen.NET -->
        <!-- <TargetFrameworks>$(TargetFrameworks);net7.0-tizen</TargetFrameworks> -->
        <UseMaui>true</UseMaui>
        <SingleProject>true</SingleProject>
        <ImplicitUsings>enable</ImplicitUsings>

        <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">14.2</SupportedOSPlatformVersion>
        <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'maccatalyst'">14.0</SupportedOSPlatformVersion>
        <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">21.0</SupportedOSPlatformVersion>
        <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</SupportedOSPlatformVersion>
        <TargetPlatformMinVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</TargetPlatformMinVersion>
        <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'tizen'">6.5</SupportedOSPlatformVersion>
    </PropertyGroup>

    <PropertyGroup>
        <PackageId>Xamarin.MediaGallery</PackageId>
        <PackageTags>maui, xamarin, .net6, ios, android, toolkit, xamarin.forms, media, picker, photos, videos, mediapicker</PackageTags>
        <Description>This plugin is designed for picking and saving photos and video files from the native gallery of Android and iOS devices</Description>
        <Version>2.1.0</Version>
        <Authors>dimonovdd</Authors>
        <Owners>dimonovdd</Owners>
        <RepositoryUrl>https://github.com/dimonovdd/Xamarin.MediaGallery</RepositoryUrl>
        <PackageReleaseNotes>See: https://github.com/dimonovdd/Xamarin.MediaGallery/releases</PackageReleaseNotes>
        <PackageReadmeFile>README.md</PackageReadmeFile>
        <PackageIcon>icon.png</PackageIcon>
        <PackageLicenseFile>LICENSE</PackageLicenseFile>
        <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
        <UseFullSemVerForNuGet>false</UseFullSemVerForNuGet>
        <EnableDefaultCompileItems>false</EnableDefaultCompileItems>
        <Configurations>Release;Debug</Configurations>    
        <LangVersion>10.0</LangVersion>
        <_IsSample>false</_IsSample>
        <PublishRepositoryUrl>true</PublishRepositoryUrl>
        <IncludeSymbols>true</IncludeSymbols>
     <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    </PropertyGroup>

    <PropertyGroup Condition=" '$(Configuration)'=='Debug' ">
        <DebugSymbols>true</DebugSymbols>
        <DebugType>portable</DebugType>
    </PropertyGroup>

    <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
        <DocumentationFile>bin\$(Configuration)\$(TargetFramework)\$(AssemblyName).xml</DocumentationFile>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.1.1" PrivateAssets="All" />
    </ItemGroup>

    <ItemGroup>
      <Folder Include="Platforms\Android" />
      <Folder Include="Platforms\iOS" />
      <Folder Include="Platforms\MacCatalyst" />
    </ItemGroup>

    <ItemGroup Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">
        <AndroidResource Include="Resources\xml\*.xml" />
    </ItemGroup>

    <!-- Android -->
    <ItemGroup Condition="$(TargetFramework.Contains('-android')) != true">
        <Compile Remove="**\**\*.Android.cs" />
        <None Include="**\**\*.Android.cs" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder)" />
    </ItemGroup>

    <!-- Both iOS and Mac Catalyst -->
    <ItemGroup Condition="$(TargetFramework.Contains('-ios')) != true AND $(TargetFramework.Contains('-maccatalyst')) != true">
        <Compile Remove="**\**\*.MaciOS.cs" />
        <None Include="**\**\*.MaciOS.cs" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder)" />
    </ItemGroup>

    <!-- iOS -->
    <ItemGroup Condition="$(TargetFramework.Contains('-ios')) != true">
        <Compile Remove="**\**\*.iOS.cs" />
        <None Include="**\**\*.iOS.cs" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder)" />
    </ItemGroup>

    <!-- Mac Catalyst -->
    <ItemGroup Condition="$(TargetFramework.Contains('-maccatalyst')) != true">
        <Compile Remove="**\**\*.MacCatalyst.cs" />
        <None Include="**\**\*.MacCatalyst.cs" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder)" />
    </ItemGroup>

    <!-- Windows -->
    <ItemGroup Condition="$(TargetFramework.Contains('-windows')) != true">
        <Compile Remove="**\*.Windows.cs" />
        <None Include="**\*.Windows.cs" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder)" />
    </ItemGroup>
    
    

</Project>
